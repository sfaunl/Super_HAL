/*
 * shal_stm32h7_gpio_def.h
 *
 *  Created on: Jan 17, 2023
 *      Author: sef
 */

#ifndef SHAL_STM32H7_GPIO_DEF_H_
#define SHAL_STM32H7_GPIO_DEF_H_

#ifdef STM32H7

typedef enum
{
	SHAL_GPIO_MODE_INPUT		= 0,
	SHAL_GPIO_MODE_OUTPUT		= GPIO_MODER_MODE0_0,
	SHAL_GPIO_MODE_ALTERNATE	= GPIO_MODER_MODE0_1,
	SHAL_GPIO_MODE_ANALOG		= GPIO_MODER_MODE0_0 | GPIO_MODER_MODE0_1

} SHAL_GPIO_MODE;

typedef enum
{
	SHAL_GPIO_OTYPE_PUSH_PULL	= 0,
	SHAL_GPIO_OTYPE_OPEN_DRAIN	= GPIO_OTYPER_OT0

} SHAL_GPIO_OTYPE;

typedef enum
{
	SHAL_GPIO_OSPEED_LOW		= 0,
	SHAL_GPIO_OSPEED_MEDIUM		= GPIO_OSPEEDR_OSPEED0_0,
	SHAL_GPIO_OSPEED_HIGH		= GPIO_OSPEEDR_OSPEED0_1,
	SHAL_GPIO_OSPEED_VERY_HIGH	= GPIO_OSPEEDR_OSPEED0_0 | GPIO_OSPEEDR_OSPEED0_1

} SHAL_GPIO_OSPEED;

typedef enum
{
	SHAL_GPIO_PULLUPDOWN_NONE	= 0,
	SHAL_GPIO_PULLUPDOWN_UP		= GPIO_PUPDR_PUPD0_0,
	SHAL_GPIO_PULLUPDOWN_DOWN	= GPIO_PUPDR_PUPD0_1

} SHAL_GPIO_PULLUPDOWN;

typedef enum
{
	SHAL_GPIO_AF_0	= 0,
	SHAL_GPIO_AF_1	= 1,
	SHAL_GPIO_AF_2	= 2,
	SHAL_GPIO_AF_3	= 3,
	SHAL_GPIO_AF_4	= 4,
	SHAL_GPIO_AF_5	= 5,
	SHAL_GPIO_AF_6	= 6,
	SHAL_GPIO_AF_7	= 7,
	SHAL_GPIO_AF_8	= 8,
	SHAL_GPIO_AF_9	= 9,
	SHAL_GPIO_AF_10	= 10,
	SHAL_GPIO_AF_11	= 11,
	SHAL_GPIO_AF_12	= 12,
	SHAL_GPIO_AF_13	= 13,
	SHAL_GPIO_AF_14	= 14,
	SHAL_GPIO_AF_15	= 15

} SHAL_GPIO_AF;

#endif // STM32H7

#endif /* SHAL_STM32H7_GPIO_DEF_H_ */
